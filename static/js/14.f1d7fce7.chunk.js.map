{"version":3,"file":"static/js/14.f1d7fce7.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesItems/MoviesItems.styled.js","components/MoviesList/MoviesItems/MoviesItems.jsx","components/MoviesList/MoviesListTrend.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ErrorStyled = styled.p`\n  color: red;\n  text-align: center;\n  font-size: 25px;\n`;\n","import { ErrorStyled } from './Error.styled';\n\nexport const Error = () => {\n  return <ErrorStyled>Something went wrong... Try reloading the page</ErrorStyled>;\n};\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <InfinitySpin\n      width='200'\n      color=\"#4fa94d\"\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ItemStyled = styled.li`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: #5f0000;\n`;\n\nexport const TitleStyled = styled.h3`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-top: 5px;\n  font-size: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { ItemStyled, LinkStyled, TitleStyled, Image } from './MoviesItems.styled';\n\nexport const MoviesItems = ({ id, title, poster_path, state }) => {\n\n  return (\n    <ItemStyled key={id} data-aos=\"fade-up\">\n      <LinkStyled to={`/movies/${id}`} state={state}>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\n          alt={title}\n          loading=\"lazy\"\n        />\n        <TitleStyled>\n          {title}\n        </TitleStyled>\n      </LinkStyled>\n    </ItemStyled>\n  );\n};\n\nMoviesItems.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n  state: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { MoviesItems } from './MoviesItems/MoviesItems';\n\nimport { ListStyled } from './MoviesListTrend.styled';\n\nexport const MoviesList = ({ movies, state }) => {\n  return (\n    <div>\n      <ListStyled>\n        {movies.map(({ id, title, poster_path }) => (\n          <MoviesItems\n            key={id}\n            id={id}\n            title={title}\n            poster_path={poster_path}\n            state={state}\n            loading=\"lazy\"\n          />\n        ))}\n      </ListStyled>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n  state: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 15px;\n  gap: 5px;\n`;\n\nexport const InputStyled = styled.input`\n  border-radius: 5px;\n  font-size: 20px;\n  color: #5f0000;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    font-size: 18px;\n  }\n\n  &:focus,\n  &:hover {\n    color: #5f0000;\n    background-color: #fff;\n    border-color: #5f0000;\n\n    box-shadow: 2px #5f0000;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  width: 100px;\n  font-size: 20px;\n  cursor: pointer;\n  border-radius: 5px;\n  border: 1px solid #bdbdbd;\n  background-color: #fff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: #5f0000;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormStyled, InputStyled, ButtonStyled } from './SearchForm.styled';\n\nexport const SearchForm = ({ onChangeSearch, value }) => {\n  const [query, setQuery] = useState(value || '');\n\n  const handelInputChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    onChangeSearch(query);\n  };\n\n  return (\n    <FormStyled onSubmit={handleFormSubmit}>\n      <InputStyled\n        type=\"text\"\n        onChange={handelInputChange}\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        required\n      />\n      <ButtonStyled type=\"submit\">Search</ButtonStyled>\n    </FormStyled>\n  );\n};\n\nSearchForm.propTypes = {\n  value: PropTypes.string,\n  onChangeSearch: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 15px 15px;\n  color: #5f0000;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { getMovieByName } from 'services/Api';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\n\nimport { ContainerStyled } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const response = await getMovieByName(query);\n        setMovies(response.results);\n        if (response.total_results === 0) {\n          alert(`We don't find any movies`);\n        }\n      } catch (error) {\n        setError(error);\n        alert(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const onChangeSearch = query => {\n    setSearchParams({ query });\n  };\n\n  const location = useLocation();\n\n  return (\n    <ContainerStyled>\n      <SearchForm onChangeSearch={onChangeSearch} value={query} />\n      {error && <Error />}\n      {movies.length > 0 && <MoviesList movies={movies} state={{ from: location }} />}\n      {isLoading && <Loader />}\n    </ContainerStyled>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e50c4e0f404e411eea1bbde1fa2e92d4',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByName = async query => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/reviews`);\n  return response.data;\n};\n"],"names":["ErrorStyled","styled","Error","Loader","width","color","ItemStyled","LinkStyled","Link","TitleStyled","Image","MoviesItems","id","title","poster_path","state","to","src","alt","loading","ListStyled","MoviesList","movies","map","FormStyled","InputStyled","ButtonStyled","SearchForm","onChangeSearch","value","useState","query","setQuery","onSubmit","event","preventDefault","type","onChange","currentTarget","toLowerCase","trim","autoComplete","autoFocus","placeholder","required","ContainerStyled","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getMovieByName","response","results","total_results","alert","location","useLocation","length","from","instance","axios","baseURL","params","api_key","getTrendMovies","data","getMovieDetails","movie_id","getMovieCast","getMovieReviews"],"sourceRoot":""}