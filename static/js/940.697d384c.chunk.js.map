{"version":3,"file":"static/js/940.697d384c.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/Loader/Loader.jsx","pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MoviesPage/MovieDetailsPage/MovieDetailsPage.jsx","services/getGenresMovie.js","services/getYearDate.js","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ErrorStyled = styled.p`\n  color: red;\n  text-align: center;\n  font-size: 25px;\n`;\n","import { ErrorStyled } from './Error.styled';\n\nexport const Error = () => {\n  return <ErrorStyled>Something went wrong... Try reloading the page</ErrorStyled>;\n};\n","import { InfinitySpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <InfinitySpin\n      width='200'\n      color=\"#4fa94d\"\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const ContainerStyled = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 15px 15px;\n  color: #5f0000;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  width: 150px;\n\n  border: none;\n  border-radius: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  color: #5f0000;\n  background-color: #fff;\n  margin-bottom: 10px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: #5f0000;\n  }\n`;\n\nexport const CardStyled = styled.div`\n  margin-bottom: 15px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 15px;\n  }\n`;\n\nexport const BoxStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 25px;\n  text-align: justify;\n`;\n\nexport const TextStyled = styled.span`\n  display: block;\n  font-weight: bold;\n`;\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  margin-bottom: 15px;\n  gap: 10px;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  padding: 10px 0;\n  color: #5f0000;\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services/Api';\nimport { getGenresMovie } from 'services/getGenresMovie';\nimport { getYearDate } from 'services/getYearDate';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\n\nimport {\n  ContainerStyled,\n  LinkStyled,\n  CardStyled,\n  BoxStyled,\n  TextStyled,\n  ListStyled,\n  NavLinkStyled,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const response = await getMovieDetails(id);\n        setMovie(response);\n      } catch (error) {\n        setError(error);\n        alert(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <ContainerStyled>\n      <LinkStyled to={backLinkHref}>\n        Go Back\n      </LinkStyled>\n      {isLoading && <Loader />}\n      {error && <Error />}\n      {!isLoading && (\n        <CardStyled>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n            }\n            alt={movie.title}\n            width=\"300\"\n            loading=\"lazy\"\n          />\n          <BoxStyled>\n            <h3>\n              {movie.title} ({getYearDate(movie.release_date)})\n            </h3>\n            <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n            <p>\n              <TextStyled>Overview</TextStyled> {movie.overview}\n            </p>\n            <p>\n              <TextStyled>Genres</TextStyled> {getGenresMovie(movie.genres)}\n            </p>\n          </BoxStyled>\n        </CardStyled>\n      )}\n      <BoxStyled>\n        <TextStyled>Additional information</TextStyled>\n        <ListStyled>\n          <li>\n            &#8594;\n            <NavLinkStyled to={`/movies/${id}/cast`} state={{ from: backLinkHref }}>\n              View cast information here\n            </NavLinkStyled>\n          </li>\n          <li>\n            &#8594;\n            <NavLinkStyled to={`/movies/${id}/reviews`} state={{ from: backLinkHref }}>\n              See reviews here\n            </NavLinkStyled>\n          </li>\n        </ListStyled>\n      </BoxStyled>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </ContainerStyled>\n  );\n};\n\nexport default MovieDetailsPage;\n","export const getGenresMovie = array => {\n  return array.map(genre => genre.name).join(', ');\n};\n","export const getYearDate = fullDate => {\n  const date = new Date();\n  return date.getFullYear(fullDate);\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e50c4e0f404e411eea1bbde1fa2e92d4',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const response = await instance.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByName = async query => {\n  const response = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await instance.get(`/movie/${movie_id}/reviews`);\n  return response.data;\n};\n"],"names":["ErrorStyled","styled","Error","Loader","width","color","ContainerStyled","LinkStyled","Link","CardStyled","BoxStyled","TextStyled","ListStyled","NavLinkStyled","NavLink","useState","movie","setMovie","isLoading","setIsLoading","error","setError","id","useParams","useEffect","fetchMovie","getMovieDetails","response","alert","array","fullDate","backLinkHref","useLocation","state","from","to","src","poster_path","alt","title","loading","release_date","Date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrendMovies","get","data","getMovieByName","query","movie_id","getMovieCast","getMovieReviews"],"sourceRoot":""}